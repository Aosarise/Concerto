<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.concerto.dao.ProjectManagementDao">

    <!-- 定义 vo-resultMap
        使用方法：resultMap = "PersonnelVo"
    -->
    <!--<resultMap id="PersonnelVo" type="com.example.concerto.vo.PersonnelVo">
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    </resultMap>-->

    <!-- 传入的时间类型参数与空字符串''进行对比判断则会引发异常 -->
    <update id="updateProject" parameterType="Project">
        update project
        <set>
            <if test="projectName != null and projectName != ''">project_name = #{projectName},</if>
            <if test="projectDescription != null and projectDescription != ''">project_description = #{projectDescription},</if>
            <if test="projectStartTime != null ">project_start_time = #{projectStartTime},</if>
            <if test="projectEndTime != null ">project_end_time = #{projectEndTime},</if>
        </set>
        where project_id = #{projectId}
    </update>



    <select id="getProjectAllMember" parameterType="java.lang.Long" resultType="com.example.concerto.vo.PersonnelVo">
        select u.user_id, user_name, user_email
        from user u, user_project up
        <where>
            project_id = #{projectId}
            and user_role in (0,1)
            and u.user_id = up.user_id
        </where>
    </select>


    <select id="getProjectApplicant" parameterType="java.lang.Long" resultType="com.example.concerto.vo.PersonnelVo">
        select u.user_id, user_name, user_email
        from user u, user_project up
        <where>
            project_id = #{projectId}
            and user_role = 2
            and u.user_id = up.user_id
        </where>
    </select>

    <update id="updateUserRole">
        update user_project
        <set>
            <if test="role != null">user_role = #{role},</if>
        </set>
        <where>
            project_id = #{projectId}
            and user_id = #{userId}
        </where>

    </update>

    <delete id="deleteUserProjectRecord">
        delete from user_project
        <where>
            project_id = #{projectId}
            and user_id = #{userId}
        </where>
    </delete>

    <select id="selectAllTaskID" parameterType="java.lang.Long" resultType="java.lang.Long">
        select task_id
        from task
        <where>
            project_id = #{projectId}
        </where>
    </select>


</mapper>